{"ast":null,"code":"var _jsxFileName = \"/home/hatem/Desktop/cfp-code-submitter/src/Code.js\";\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-javascript\";\nimport firebase from \"firebase\";\nimport Questions from \"./Questions\";\nimport weeksproblem from \"./weeklyQuestions\"; // import AceEditor from 'react-ace';\n// import \"ace-builds/src-noconflict/mode-python\";\n// import \"ace-builds/src-noconflict/theme-github\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAW7-NGHjYyEOUWZL9eIvSp-glELUXuq0E\",\n  authDomain: \"inclass-qs.firebaseapp.com\",\n  databaseURL: \"https://inclass-qs.firebaseio.com\",\n  projectId: \"inclass-qs\",\n  storageBucket: \"inclass-qs.appspot.com\",\n  messagingSenderId: \"76230869433\",\n  appId: \"1:76230869433:web:de34cca5ec6ecc92457668\",\n  measurementId: \"G-151K89PMKH\"\n};\n\ntry {\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n} catch {}\n\nvar db = firebase.firestore();\nexport default function Code({\n  name\n}) {\n  const [code, setCode] = useState(`def main():\n      pass\n    if __name__ == \"__main__\":\n      main()`);\n  const [selectedQuestion, setSelectedQuestion] = useState(weeksproblem[0][\"qName\"]); // const [name, setName] = firebase.auth().currentUser.displayName;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Questions, {\n    questions: weeksproblem,\n    className: \"currentQs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"codeSubmission\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"codeblock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Editor, {\n    value: code,\n    onValueChange: code => setCode(code),\n    highlight: code => highlight(code, languages.js),\n    padding: 10,\n    tabSize: 2,\n    style: {\n      fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n      fontSize: 12,\n      height: 320\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Select the problem\"), weeksproblem.map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onChange: event => {\n        console.log(event.target.value);\n        setSelectedQuestion(event.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: item[\"qName\"],\n      name: \"problem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, item[\"qName\"]), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"send-button\",\n    onClick: () => {\n      db.collection(name).doc(selectedQuestion).set({\n        code: code\n      }).then(function () {\n        console.log(\"Question sent successfully!\");\n      }).catch(function (error) {\n        console.error(\"Error sending question: \", error);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Send Code\")));\n}","map":{"version":3,"sources":["/home/hatem/Desktop/cfp-code-submitter/src/Code.js"],"names":["React","useState","Editor","highlight","languages","firebase","Questions","weeksproblem","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","analytics","db","firestore","Code","name","code","setCode","selectedQuestion","setSelectedQuestion","js","fontFamily","fontSize","height","map","item","event","console","log","target","value","collection","doc","set","then","catch","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-javascript\";\nimport firebase from \"firebase\";\nimport Questions from \"./Questions\";\nimport weeksproblem from \"./weeklyQuestions\";\n\n// import AceEditor from 'react-ace';\n\n// import \"ace-builds/src-noconflict/mode-python\";\n// import \"ace-builds/src-noconflict/theme-github\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAW7-NGHjYyEOUWZL9eIvSp-glELUXuq0E\",\n  authDomain: \"inclass-qs.firebaseapp.com\",\n  databaseURL: \"https://inclass-qs.firebaseio.com\",\n  projectId: \"inclass-qs\",\n  storageBucket: \"inclass-qs.appspot.com\",\n  messagingSenderId: \"76230869433\",\n  appId: \"1:76230869433:web:de34cca5ec6ecc92457668\",\n  measurementId: \"G-151K89PMKH\"\n};\n\ntry {\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n} catch {}\nvar db = firebase.firestore();\n\nexport default function Code({ name }) {\n  const [code, setCode] = useState(\n    `def main():\n      pass\n    if __name__ == \"__main__\":\n      main()`\n  );\n\n  const [selectedQuestion, setSelectedQuestion] = useState(\n    weeksproblem[0][\"qName\"]\n  );\n  // const [name, setName] = firebase.auth().currentUser.displayName;\n\n  return (\n    <div>\n      <Questions questions={weeksproblem} className=\"currentQs\" />\n\n      <form className=\"codeSubmission\">\n        <div className=\"codeblock\">\n          <Editor\n            value={code}\n            onValueChange={code => setCode(code)}\n            highlight={code => highlight(code, languages.js)}\n            padding={10}\n            tabSize={2}\n            style={{\n              fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n              fontSize: 12,\n              height: 320\n            }}\n          />\n        </div>\n        {\n          // <AceEditor\n          //   placeholder=\"Placeholder Text\"\n          //   mode=\"python\"\n          //   theme=\"monokai\"\n          //   name=\"blah2\"\n          //   onLoad={() => {}}\n          //   onChange={code => {\n          //     console.log(code);\n          //     setCode(code);\n          //   }}\n          //   fontSize={12}\n          //   showPrintMargin={true}\n          //   showGutter={true}\n          //   highlightActiveLine={true}\n          //   value={code}\n          //   setOptions={{\n          //     enableBasicAutocompletion: true,\n          //     enableLiveAutocompletion: true,\n          //     enableSnippets: true,\n          //     showLineNumbers: true,\n          //     tabSize: 2\n          //   }}\n          // />\n        }\n        <p>Select the problem</p>\n        {weeksproblem.map(item => {\n          return (\n            <div\n              onChange={event => {\n                console.log(event.target.value);\n                setSelectedQuestion(event.target.value);\n              }}\n            >\n              <input type=\"radio\" value={item[\"qName\"]} name=\"problem\" />\n              <label>{item[\"qName\"]}</label>\n              <br />\n            </div>\n          );\n        })}\n\n        <button\n          className=\"send-button\"\n          onClick={() => {\n            db.collection(name)\n              .doc(selectedQuestion)\n              .set({\n                code: code\n              })\n              .then(function() {\n                console.log(\"Question sent successfully!\");\n              })\n              .catch(function(error) {\n                console.error(\"Error sending question: \", error);\n              });\n          }}\n        >\n          Send Code\n        </button>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}